openapi: 3.0.2
info:
  title: Practica AOS gestión de vehículos subsistema_2
  version: '1.0'
  description: >-
    Práctica realizada por el grupo 4 realizando el subservicio de gestión de
    coches en el taller

servers:
  - url: https://api.example.io
paths:
  /vehiculo:
    summary: 'Obtenemos el listado de todos los vehículos en el sistema.'
    get:
      tags:
        - vehiculo
      parameters:
        - $ref: '#/components/parameters/OrdenacionVehiculo'
        - $ref: '#/components/parameters/direccionOrden'
        
      responses:
        '200':
          $ref: '#/components/responses/Response_200'
        '400':
          $ref: '#/components/responses/Response_400'
        '404':
          $ref: '#/components/responses/Response_404'
        '502':
          $ref: '#/components/responses/Response_502'

      operationId: vehiculos_get
      summary: Obtenemos el listado de todos los vehículos
      description: |-
        Las posibles respuestas a esta operación son:

        | Código error | Descripción | Motivo |
        | -------- | -------- | -------- |
        | *200*     |  OK     | Hay vehiculos     |
        | *400*     |  BAD REQUEST     | Sintaxis incorrecta     |
        | *404*     |  NOT FOUND     | No hay vehiculos     |
        | *502*     |  INTERNAL SERVER ERROR     | Error en el servidor     |
components:
  schemas:
    Link:
      description: Enlaces anterior y siguiente página
      title: 'Links'
      type: object
      properties:
        href:
          description: URLs de los enlaces
          type: string
          format: uri
          x-faker: internet.url
        rel:
          description: "Relacion de los enlaces separados por un espacio"
          type: string
          x-faker: lorem.words
      example:
        href: https://www.EstoEsUnEjemplo.com/ejemplo/ejemplo2
        rel: Accion1_AnteriorPag Accion2_SiguientePag
    vehiculo:
      title: vehiculo
      description: objeto vehiculo a gestionar
      required:
        - VIN
        - matricula
        - marca
        - modelo
        - motor
        - clienteID
        - proposito
      type: object
      properties:
        VIN:
          description: Identificador único de cada vehículo
          type: string
        matricula:
          description: Matrícula del vehículo
          type: string
        marca:
          description: Marca del vehículo (mercedes, porche, etc.)
          type: string
        modelo:
          description: Modelo de vehículo
          type: string
        año:
          format: int32
          description: Año de fabricación del vehiculo
          type: integer
        motor:
          description: Cilindrada del motor, CV del motor, tipo de motor.
          type: string
        clienteID:
          description: Identificador único del cliente propietario del vehículo
          type: string
        reparacionUltima:
          nullable: true
          format: int32
          description: Año de la última reparación del vehículo
          type: integer
        proposito:
          description: Propósito de la visita. Para reparar o revisar.
          enum:
            - Reparar
            - Revisar
            - Reparar y Revisar
          type: string
      example:
        vehiculo:
          VIN: MNCLSFE405W491230
          matricula: XEC4567YX
          marca: Ford
          modelo: Mustang
          año: 1987
          motor: V8, 500 CV, gasolina
          clienteID: qwer1234
          reparacionUltima: 2021
          proposito: Reparar y Revisar
    HTTP_Problem:
      description: >
        Problem Details for HTTP APIs

        [https://tools.ietf.org/html/rfc7807](https://tools.ietf.org/html/rfc7807)
      type: object
      properties:
        type:
          format: uri
          description: A URI reference [RFC3986] that identifies the problem type
          type: string
        title:
          description: short human-readable summary of the problem type
          type: string
        status:
          description: HTTP status code
          type: number
        detail:
          description: >-
            human-readable explanation specific to this occurrence of the
            problem
          type: string
        instance:
          format: uri
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.  It may or may not yield further information if
            dereferenced
          type: string
      externalDocs:
        url: https://tools.ietf.org/html/rfc7807
  headers:
    ETag:
      description: Entity Tag (identificador único proporcionado para validación de caché)
      schema:
        type: string
        pattern: "[0-9a-f]*"
        x-faker: random.uuid
        example: 123456789qwertyu
    Allow:
      description: Lista de métodos HTTP soportados por ETags
      schema:
        type: string
      example: GET,DELETE,PUT,OPTIONS
    Location:
      description: '`URI` del nuevo recurso'
      schema:
        type: string
        format: uri
        x-faker: internet.url
        example:
          https://www.miurl.com/api/v1/vehiculo/1
  responses:
    Response_200:
      headers:
        ETag:
          $ref: '#/components/headers/ETag'
      content:
        application/json:
          schema:
            type: object
            properties:
              vehiculos:
                description: Listado de vehiculos
                type: array
                items:
                  $ref: '#/components/schemas/vehiculo'
              links:
                description: Enlaces de paginación
                readOnly: true
                type: object
                properties:
                  prevPage:
                    $ref: '#/components/schemas/Link'
                  nextPage:
                    $ref: '#/components/schemas/Link'
                  
      description: '`OK`: el objeto ha sido modificado'
    Response_201:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas'
          examples:
            response-http-201:
              $ref: '#/components/examples/response-http-201'
      description: El recurso ha sido creado
      headers:
        Location:
          $ref: '#/components/schemas'
    Response_400:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-400:
              $ref: '#/components/examples/response-http-400'
      description: '`Bad Request`: el recurso no se encuentra disponible'
    Response_401:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-401:
              $ref: '#/components/examples/response-http-401'
      description: '`UNAUTHORIZED`: no dispone de las credenciales válidas'
    Response_403:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-403:
              $ref: '#/components/examples/response-http-403'
      description: '`FORBIDDEN`: la petición no ha sido autorizada'
    Response_404:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-404:
              $ref: '#/components/examples/response-http-404'
      description: '`NOT FOUND`: el recurso no se encuentra disponible'
    Response_408:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-408:
              $ref: '#/components/examples/response-http-408'
      description: '`REQUEST_TIMEOUT`: se ha perdido la conexión con el recurso'
    Response_502:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/HTTP_Problem'
          examples:
            response-http-408:
              $ref: '#/components/examples/response-http-502'
      description: '`INTERNAL SERVER ERROR`: Ha ocurrido un error en el servidor'

  parameters:
    OrdenacionVehiculo:
      deprecated: false
      name: Ordenación
      description: Ordenación del listado de los vehículos
      schema:
        description: |-
          Ordenación de la respuesta por los siguientes parámetros:
          * VIN
          * año
          * reparacionUltima
          * clienteID
        enum:
          - VIN
          - año
          - reparacionUltima
          - clienteID
        type: string
      in: query
      required: false
      allowEmptyValue: false
      x-last-modified: 1648886783946
    direccionOrden:
      deprecated: false
      name: Dirección del orden
      description: |-
        Se elige entre orden:
        * ASC -> ASCENDENTE
        * DES -> DESCENTENTE
      schema:
        description: Tipo de orden ascendente o descendente
        enum:
          - ASC
          - DESC
        type: string
      in: query
      required: false
      allowEmptyValue: false
      x-last-modified: 1648886922545
  examples:

    response-http-201:
      value:
        type: https://httpstatuses.com/200
        title: Resource Created
        status: 201
        detail: El recurso ha sido creado
        instance: about:blank
    response-http-400:
      value:
        type: https://httpstatuses.com/400
        title: Bad Request
        status: 400
        detail: La petición realizada es incorrecta
        instance: about:blank
    response-http-401:
      value:
        type: https://httpstatuses.com/401
        title: UNAUTHORIZED
        status: 401
        detail: Las credenciales no son correctas
        instance: about:blank
    response-http-403:
      value:
        type: https://httpstatuses.com/403
        title: FORBIDDEN
        status: 403
        detail: La petición es correcta pero no se autoriza
        instance: about:blank
    response-http-404:
      value:
        type: https://httpstatuses.com/404
        title: NOT FOUND
        status: 404
        detail: El recurso con el vehículo solicitado no se encuentra disponible
        instance: about:blank
    response-http-408:
      value:
        type: https://httpstatuses.com/408
        title: REQUEST_TIMEOUT
        status: 408
        detail: Se ha perdido la conexión con el servidor
        instance: about:blank
    response-http-502:
      value:
        type: https://httpstatuses.com/502
        title: INTERNAL SERVER ERROR
        status: 502
        detail: Error en el servidor
        instance: about:blank


        
        
        
        
        
           
            
  
  
